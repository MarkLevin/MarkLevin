#include <iostream>
#include <cmath>
using namespace std;

int main()
{
double a[500];
a[0]=0;
a[1]=5.64333;
a[2]=7.98087;
a[3]=9.77453;
a[4]=11.2867;
a[5]=12.6189;
a[6]=13.8233;
a[7]=14.9308;
a[8]=15.9617;
a[9]=16.93;
a[10]=17.8458;
a[11]=18.7168;
a[12]=19.5491;
a[13]=20.3473;
a[14]=21.1154;
a[15]=21.8565;
a[16]=22.5733;
a[17]=23.268;
a[18]=23.9426;
a[19]=24.5987;
a[20]=25.2377;
a[21]=25.861;
a[22]=26.4695;
a[23]=27.0644;
a[24]=27.6465;
a[25]=28.2166;
a[26]=28.7754;
a[27]=29.3236;
a[28]=29.8617;
a[29]=30.3902;
a[30]=30.9098;
a[31]=31.4207;
a[32]=31.9235;
a[33]=32.4184;
a[34]=32.906;
a[35]=33.3864;
a[36]=33.86;
a[37]=34.327;
a[38]=34.7878;
a[39]=35.2426;
a[40]=35.6915;
a[41]=36.1349;
a[42]=36.5729;
a[43]=37.0058;
a[44]=37.4336;
a[45]=37.8566;
a[46]=38.2749;
a[47]=38.6887;
a[48]=39.0981;
a[49]=39.5033;
a[50]=39.9043;
a[51]=40.3014;
a[52]=40.6946;
a[53]=41.084;
a[54]=41.4698;
a[55]=41.852;
a[56]=42.2308;
a[57]=42.6062;
a[58]=42.9783;
a[59]=43.3472;
a[60]=43.713;
a[61]=44.0758;
a[62]=44.4356;
a[63]=44.7925;
a[64]=45.1466;
a[65]=45.498;
a[66]=45.8466;
a[67]=46.1926;
a[68]=46.5361;
a[69]=46.877;
a[70]=47.2155;
a[71]=47.5515;
a[72]=47.8852;
a[73]=48.2166;
a[74]=48.5457;
a[75]=48.8726;
a[76]=49.1974;
a[77]=49.52;
a[78]=49.8405;
a[79]=50.159;
a[80]=50.4754;
a[81]=50.7899;
a[82]=51.1025;
a[83]=51.4132;
a[84]=51.7219;
a[85]=52.0289;
a[86]=52.3341;
a[87]=52.6374;
a[88]=52.9391;
a[89]=53.239;
a[90]=53.5373;
a[91]=53.8339;
a[92]=54.1289;
a[93]=54.4223;
a[94]=54.7141;
a[95]=55.0043;
a[96]=55.2931;
a[97]=55.5803;
a[98]=55.8661;
a[99]=56.1504;
a[100]=56.4333;
a[101]=56.7147;
a[102]=56.9948;
a[103]=57.2735;
a[104]=57.5509;
a[105]=57.8269;
a[106]=58.1016;
a[107]=58.375;
a[108]=58.6472;
a[109]=58.9181;
a[110]=59.1877;
a[111]=59.4561;
a[112]=59.7234;
a[113]=59.9894;
a[114]=60.2542;
a[115]=60.5179;
a[116]=60.7805;
a[117]=61.0419;
a[118]=61.3022;
a[119]=61.5614;
a[120]=61.8195;
a[121]=62.0766;
a[122]=62.3326;
a[123]=62.5875;
a[124]=62.8414;
a[125]=63.0943;
a[126]=63.3462;
a[127]=63.5971;
a[128]=63.847;
a[129]=64.0959;
a[130]=64.3438;
a[131]=64.5908;
a[132]=64.8369;
a[133]=65.082;
a[134]=65.3262;
a[135]=65.5695;
a[136]=65.8119;
a[137]=66.0534;
a[138]=66.2941;
a[139]=66.5338;
a[140]=66.7727;
a[141]=67.0108;
a[142]=67.248;
a[143]=67.4844;
a[144]=67.7199;
a[145]=67.9546;
a[146]=68.1886;
a[147]=68.4217;
a[148]=68.654;
a[149]=68.8856;
a[150]=69.1164;
a[151]=69.3464;
a[152]=69.5756;
a[153]=69.8041;
a[154]=70.0318;
a[155]=70.2588;
a[156]=70.4851;
a[157]=70.7107;
a[158]=70.9355;
a[159]=71.1596;
a[160]=71.3831;
a[161]=71.6058;
a[162]=71.8278;
a[163]=72.0492;
a[164]=72.2698;
a[165]=72.4898;
a[166]=72.7092;
a[167]=72.9279;
a[168]=73.1459;
a[169]=73.3632;
a[170]=73.58;
a[171]=73.7961;
a[172]=74.0115;
a[173]=74.2264;
a[174]=74.4406;
a[175]=74.6542;
a[176]=74.8672;
a[177]=75.0796;
a[178]=75.2914;
a[179]=75.5026;
a[180]=75.7132;
a[181]=75.9232;
a[182]=76.1326;
a[183]=76.3415;
a[184]=76.5498;
a[185]=76.7575;
a[186]=76.9647;
a[187]=77.1713;
a[188]=77.3774;
a[189]=77.5829;
a[190]=77.7879;
a[191]=77.9923;
a[192]=78.1962;
a[193]=78.3996;
a[194]=78.6024;
a[195]=78.8048;
a[196]=79.0066;
a[197]=79.2079;
a[198]=79.4086;
a[199]=79.6089;
a[200]=79.8087;
a[201]=80.008;
a[202]=80.2067;
a[203]=80.405;
a[204]=80.6028;
a[205]=80.8001;
a[206]=80.997;
a[207]=81.1933;
a[208]=81.3892;
a[209]=81.5846;
a[210]=81.7796;
a[211]=81.9741;
a[212]=82.1681;
a[213]=82.3616;
a[214]=82.5547;
a[215]=82.7474;
a[216]=82.9396;
a[217]=83.1314;
a[218]=83.3227;
a[219]=83.5136;
a[220]=83.7041;
a[221]=83.8941;
a[222]=84.0837;
a[223]=84.2728;
a[224]=84.4616;
a[225]=84.6499;
a[226]=84.8378;
a[227]=85.0253;
a[228]=85.2124;
a[229]=85.399;
a[230]=85.5853;
a[231]=85.7711;
a[232]=85.9566;
a[233]=86.1416;
a[234]=86.3263;
a[235]=86.5106;
a[236]=86.6944;
a[237]=86.8779;
a[238]=87.061;
a[239]=87.2437;
a[240]=87.426;
a[241]=87.608;
a[242]=87.7896;
a[243]=87.9708;
a[244]=88.1516;
a[245]=88.332;
a[246]=88.5121;
a[247]=88.6918;
a[248]=88.8712;
a[249]=89.0502;
a[250]=89.2288;
a[251]=89.4071;
a[252]=89.585;
a[253]=89.7626;
a[254]=89.9398;
a[255]=90.1167;
a[256]=90.2932;
a[257]=90.4694;
a[258]=90.6452;
a[259]=90.8207;
a[260]=90.9959;
a[261]=91.1707;
a[262]=91.3452;
a[263]=91.5194;
a[264]=91.6932;
a[265]=91.8667;
a[266]=92.0399;
a[267]=92.2127;
a[268]=92.3852;
a[269]=92.5574;
a[270]=92.7293;
a[271]=92.9009;
a[272]=93.0721;
a[273]=93.2431;
a[274]=93.4137;
a[275]=93.584;
a[276]=93.754;
a[277]=93.9237;
a[278]=94.0931;
a[279]=94.2621;
a[280]=94.4309;
a[281]=94.5994;
a[282]=94.7676;
a[283]=94.9354;
a[284]=95.103;
a[285]=95.2703;
a[286]=95.4373;
a[287]=95.604;
a[288]=95.7704;
a[289]=95.9366;
a[290]=96.1024;
a[291]=96.2679;
a[292]=96.4332;
a[293]=96.5982;
a[294]=96.7629;
a[295]=96.9273;
a[296]=97.0915;
a[297]=97.2553;
a[298]=97.4189;
a[299]=97.5822;
a[300]=97.7453;
a[301]=97.9081;
a[302]=98.0706;
a[303]=98.2328;
a[304]=98.3948;
a[305]=98.5565;
a[306]=98.7179;
a[307]=98.8791;
a[308]=99.04;
a[309]=99.2006;
a[310]=99.361;
a[311]=99.5211;
a[312]=99.681;
a[313]=99.8406;
a[314]=100;
a[315]=100.159;
a[316]=100.318;
a[317]=100.477;
a[318]=100.635;
a[319]=100.793;
a[320]=100.951;
a[321]=101.109;
a[322]=101.266;
a[323]=101.423;
a[324]=101.58;
a[325]=101.737;
a[326]=101.893;
a[327]=102.049;
a[328]=102.205;
a[329]=102.361;
a[330]=102.516;
a[331]=102.671;
a[332]=102.826;
a[333]=102.981;
a[334]=103.136;
a[335]=103.29;
a[336]=103.444;
a[337]=103.598;
a[338]=103.751;
a[339]=103.905;
a[340]=104.058;
a[341]=104.211;
a[342]=104.363;
a[343]=104.516;
a[344]=104.668;
a[345]=104.82;
a[346]=104.972;
a[347]=105.124;
a[348]=105.275;
a[349]=105.426;
a[350]=105.577;
a[351]=105.728;
a[352]=105.878;
a[353]=106.028;
a[354]=106.179;
a[355]=106.328;
a[356]=106.478;
a[357]=106.628;
a[358]=106.777;
a[359]=106.926;
a[360]=107.075;
a[361]=107.223;
a[362]=107.372;
a[363]=107.52;
a[364]=107.668;
a[365]=107.816;
a[366]=107.963;
a[367]=108.111;
a[368]=108.258;
a[369]=108.405;
a[370]=108.552;
a[371]=108.698;
a[372]=108.845;
a[373]=108.991;
a[374]=109.137;
a[375]=109.283;
a[376]=109.428;
a[377]=109.574;
a[378]=109.719;
a[379]=109.864;
a[380]=110.009;
a[381]=110.153;
a[382]=110.298;
a[383]=110.442;
a[384]=110.586;
a[385]=110.73;
a[386]=110.874;
a[387]=111.017;
a[388]=111.161;
a[389]=111.304;
a[390]=111.447;
a[391]=111.59;
a[392]=111.732;
a[393]=111.875;
a[394]=112.017;
a[395]=112.159;
a[396]=112.301;
a[397]=112.442;
a[398]=112.584;
a[399]=112.725;
a[400]=112.867;
a[401]=113.008;
a[402]=113.148;
a[403]=113.289;
a[404]=113.429;
a[405]=113.57;
a[406]=113.71;
a[407]=113.85;
a[408]=113.99;
a[409]=114.129;
a[410]=114.269;
a[411]=114.408;
a[412]=114.547;
a[413]=114.686;
a[414]=114.825;
a[415]=114.963;
a[416]=115.102;
a[417]=115.24;
a[418]=115.378;
a[419]=115.516;
a[420]=115.654;
a[421]=115.791;
a[422]=115.929;
a[423]=116.066;
a[424]=116.203;
a[425]=116.34;
a[426]=116.477;
a[427]=116.614;
a[428]=116.75;
a[429]=116.886;
a[430]=117.023;
a[431]=117.159;
a[432]=117.294;
a[433]=117.43;
a[434]=117.566;
a[435]=117.701;
a[436]=117.836;
a[437]=117.971;
a[438]=118.106;
a[439]=118.241;
a[440]=118.375;
a[441]=118.51;
a[442]=118.644;
a[443]=118.778;
a[444]=118.912;
a[445]=119.046;
a[446]=119.18;
a[447]=119.313;
a[448]=119.447;
a[449]=119.58;
a[450]=119.713;
a[451]=119.846;
a[452]=119.979;
a[453]=120.111;
a[454]=120.244;
a[455]=120.376;
a[456]=120.508;
a[457]=120.641;
a[458]=120.772;
a[459]=120.904;
a[460]=121.036;
a[461]=121.167;
a[462]=121.299;
a[463]=121.43;
a[464]=121.561;
a[465]=121.692;
a[466]=121.823;
a[467]=121.953;
a[468]=122.084;
a[469]=122.214;
a[470]=122.344;
a[471]=122.474;
a[472]=122.604;
a[473]=122.734;
a[474]=122.864;
a[475]=122.993;
a[476]=123.123;
a[477]=123.252;
a[478]=123.381;
a[479]=123.51;
a[480]=123.639;
a[481]=123.768;
a[482]=123.896;
a[483]=124.025;
a[484]=124.153;
a[485]=124.281;
a[486]=124.409;
a[487]=124.537;
a[488]=124.665;
a[489]=124.793;
a[490]=124.92;
a[491]=125.048;
a[492]=125.175;
a[493]=125.302;
a[494]=125.429;
a[495]=125.556;
a[496]=125.683;
a[497]=125.809;
a[498]=125.936;
a[499]=126.062;

	int n;
	cin>>n;
	for(int i=0;i<n;i++)
	{
		double x,y;
		cin>>x>>y;
		double len;
		len=sqrt(x*x+y*y);

		for(int t=0;t<500;t++)
		{
			if(len<a[t]) 
			{
				cout<<"Property "<<i+1;
				cout<<": This property will begin eroding in year ";
				cout<<t<<"."<<endl;
				break;
			}
		}
	}
	cout<<"END OF OUTPUT."<<endl;
}
